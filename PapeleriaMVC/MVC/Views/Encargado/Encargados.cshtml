@model ListarEncargadosViewModel
@{
    Layout = "_LayoutEncargado";
    ViewData["Title"] = "Lista de encargados";
    var mensajeExito = TempData["MensajeExito"] as string;
    var mensajeEliminacionExitosa = TempData["EliminacionExitosa"] as string;
}

@if (!string.IsNullOrEmpty(mensajeExito) || !string.IsNullOrEmpty(mensajeEliminacionExitosa))
{
    <script>
        $(document).ready(function () {
            showToast('@mensajeExito', '@mensajeEliminacionExitosa');
        });
    </script>
}

<div class="container mt-3">
    <h1 class ="text-light">@ViewData["Title"]</h1>
    <!-- Tabla de encargados -->
    <div class="table-responsive">
        <table class="table table-hover">
            <thead class="d-md-table-row-group">
                <tr>
                    <th class ="text-primary">ID</th>
                    <th class ="text-primary">Nombre</th>
                    <th class ="text-primary">Apellido</th>
                    <th class ="text-primary">Email</th>
                    <th class ="text-primary">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var encargado in Model.Encargados)
                {
                    <tr class="main-row">
                        <td class="text-light">@encargado.EncargadoId</td>
                        <td class="text-light">
                            <div class="d-flex justify-content-between d-md-none">
                                @encargado.Nombre @encargado.Apellido
                                <button class="btn btn-sm btn-toggle" onclick="toggleDetails(this)">
                                    <i class="fa fa-chevron-down"></i>
                                </button>
                            </div>
                            <span class ="text-light">@encargado.Nombre</span>
                        </td>
                        <td class ="text-light">@encargado.Apellido</td>
                        <td class ="text-light">@encargado.Email</td>
                        <td class ="text-light">
                            <a href="@Url.Action("Editar", new { id = encargado.EncargadoId })" class="btn btn-outline-success btn-sm" title="Editar">
                                <i class="fa fa-pencil-alt"></i>
                            </a>
                            <a href="@Url.Action("Borrar", new { id = encargado.EncargadoId })" class="btn btn-outline-danger btn-sm" title="Eliminar" onclick="return confirm('¿Estás seguro de querer eliminar este encargado?');">
                                <i class="fa fa-trash"></i>
                            </a>
                        </td>
                    </tr>
                    <tr class="details-row d-none">
                        <td colspan="6">
                            <div>Email: @encargado.Email</div>
                            <div>
                                Acciones:
                                <a href="@Url.Action("Editar", new { id = encargado.EncargadoId })" class="btn btn-outline-success btn-sm" title="Editar">
                                    <i class="fa fa-pencil-alt"></i>
                                </a>
                                <a href="@Url.Action("Borrar", new { id = encargado.EncargadoId })" class="btn btn-outline-danger btn-sm" title="Eliminar" onclick="return confirm('¿Estás seguro de querer eliminar este usuario?');">
                                    <i class="fa fa-trash"></i>
                                </a>
                            </div>
                        </td>
                        <span class="text-danger">@ViewBag.Error</span>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts{
    @*para la notificación*@
    <script>
        window.addEventListener('resize', function () {
            updateTableHeader();
            if (window.innerWidth >= 768) {
                closeAllDetails();
            }
        });

        function toggleDetails(button) {
            const mainRow = button.closest('.main-row');
            const detailsRow = mainRow.nextElementSibling;
            if (detailsRow.classList.contains('details-row')) {
                detailsRow.classList.toggle('d-none');
                button.innerHTML = detailsRow.classList.contains('d-none') ? '<i class="fa fa-chevron-down"></i>' : '<i class="fa fa-chevron-up"></i>';
            }
        }

        function closeAllDetails() {
            document.querySelectorAll('.details-row').forEach(function (row) {
                row.classList.add('d-none');
            });
            document.querySelectorAll('.btn-toggle').forEach(function (button) {
                button.innerHTML = '<i class="fa fa-chevron-down"></i>';
            });
        }

        function updateTableHeader() {
            const thead = document.querySelector('thead');
            if (window.innerWidth < 768) {
                thead.classList.add('d-none');
            } else {
                thead.classList.remove('d-none');
            }
        }

        // Call updateTableHeader on page load to set the initial state
        document.addEventListener('DOMContentLoaded', updateTableHeader);
    </script>
}