@using Domain
@model ConsultaPorArticuloYTipoViewModel

@{
    ViewData["Title"] = "Consulta por Artículo y Tipo de Movimiento";
}

<h2 class="text-light">@ViewData["Title"]</h2>

<form asp-action="ConsultaPorArticuloYTipo" method="post" class="bg-search rounded py-3 px-1 mb-2">
    <div class="container">
        <div class="row justify-content-center">
            <!-- Selección de Artículo -->
            <div class="col-12 col-md-6 col-lg-6 mb-2 mb-md-0">
                <select asp-for="ArticuloId" class="form-control" asp-items="@(new SelectList(Model.Articulos, "ArticuloId", "Nombre"))">
                    <option value="">Selecciona un artículo</option>
                </select>
            </div>

            <!-- Selección de Tipo de Movimiento -->
            <div class="col-12 col-md-6 col-lg-6 mb-2 mb-md-0">
                <select asp-for="TipoMovimientoId" class="form-control" asp-items="@(new SelectList(Model.TiposMovimiento, "TipoMovimientoId", "Nombre"))">
                    <option value="">Selecciona un tipo de movimiento</option>
                </select>
            </div>

            <!-- Botón de Buscar -->
            <div class="col-12 col-md-12 col-lg-12 mt-3">
                <button type="submit" class="botonAmarillo text-white rounded-3 w-75 w-75 d-block mx-auto">Buscar</button>
            </div>
            <span class="text-danger">@ViewBag.Error</span>
        </div>
    </div>
</form>

<div class="container mt-3">
    @if (!string.IsNullOrEmpty(Model.ArticuloNombre))
    {
        <div class="row">
            <div class="col-md-12">
                <h3>Artículo: <span class="text-success">@Model.ArticuloNombre</span></h3>
                <h4 class="text-success">Tipo de Movimiento: <span class="text-success">@Model.TipoMovimientoNombre</span></h4>
            </div>
        </div>
    }

    <div class="table-responsive">
        <table class="table table-hover table-dark">
            <thead>
                <tr>
                    <th class="text-primary">ID</th>
                    <th class="text-primary">Fecha</th>
                    <th class="text-primary">Email Encargado</th>
                    <th class="text-primary">Cantidad Movida</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var movimiento in Model.Movimientos)
                {
                    <tr>
                        <td>@movimiento.MovimientoId</td>
                        <td>@movimiento.Fecha.ToShortDateString()</td>
                        <td>@movimiento.EmailEncargado</td>
                        <td class="@(movimiento.TipoMovimiento.EsAumento ? "text-success" : "text-danger")">@movimiento.CantidadMovida</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<!-- Paginación -->
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center mt-2">
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link color4 text-light" href="@Url.Action("ConsultaPorArticuloYTipo", new { page = 1, pageSize = Paginado.PageSize, ArticuloId = Model.ArticuloId, TipoMovimientoId = Model.TipoMovimientoId })" aria-label="First">
                    <span aria-hidden="true">&laquo;&laquo;</span>
                </a>
            </li>
            <li class="page-item">
                <a class="page-link color4 text-light" href="@Url.Action("ConsultaPorArticuloYTipo", new { page = Model.CurrentPage - 1, pageSize = Paginado.PageSize, ArticuloId = Model.ArticuloId, TipoMovimientoId = Model.TipoMovimientoId })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link @(i == Model.CurrentPage ? "color3 text-light" : "bg-color4 text-light")" href="@Url.Action("ConsultaPorArticuloYTipo", new { page = i, pageSize = Paginado.PageSize, ArticuloId = Model.ArticuloId, TipoMovimientoId = Model.TipoMovimientoId })">@i</a>
            </li>
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <li class="page-item">
                <a class="page-link color4 text-light" href="@Url.Action("ConsultaPorArticuloYTipo", new { page = Model.CurrentPage + 1, pageSize = Paginado.PageSize, ArticuloId = Model.ArticuloId, TipoMovimientoId = Model.TipoMovimientoId })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
            <li class="page-item">
                <a class="page-link color4 text-light" href="@Url.Action("ConsultaPorArticuloYTipo", new { page = Model.TotalPages, pageSize = Paginado.PageSize, ArticuloId = Model.ArticuloId, TipoMovimientoId = Model.TipoMovimientoId })" aria-label="Last">
                    <span aria-hidden="true">&raquo;&raquo;</span>
                </a>
            </li>
        }
    </ul>
</nav>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}